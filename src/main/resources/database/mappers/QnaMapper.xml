<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.alcohol.sul.board.qna.QnaDAO">
	<sql id="searchSql">
		SELECT * FROM QNA Q
		WHERE Q.REF IN (SELECT C.REF FROM QNA C
		          		WHERE c.NAME = #{member.name})
		AND QNANUM>0
		<choose>
			<when test="pager.kind == 'title'">
				AND SUBJECT LIKE '%'||#{pager.search}||'%'
			</when>
			<otherwise>
				AND CONTENTS LIKE '%'||#{pager.search}||'%'
			</otherwise>
		</choose>	
	</sql>
	
	
 	<select id="getTotal" parameterType="Map" resultType="Long">
 		SELECT COUNT(QNANUM) FROM (
		<include refid="searchSql"></include>
		)
 	</select>
 	
 	
 	<select id="getList" parameterType="Map" resultMap="getSelectResult" >
		SELECT * FROM
 			(SELECT ROWNUM R, B.* FROM
		  		(
					<include refid="searchSql"></include>
			  		ORDER BY REF DESC, STEP ASC
		  		) B
	  		)
	  	WHERE R BETWEEN #{pager.startRow} AND #{pager.lastRow}
 	</select>
 	
 	<select id="getTotalNum" parameterType="QnaDTO" resultType="Long">
 		SELECT COUNT(QNANUM) FROM QNA
		WHERE NAME = #{name}
 	</select>
 	
 	
 	<select id="getDetail" parameterType="QnaDTO" resultMap="getSelectResult">
 		SELECT A.*, B.QNANUM AS PNUM, B.NAME AS PNAME, B.CONTENTS AS PCON, B.STEP AS PSTEP, QF.*
	    FROM 
	    	QNA A
	     	LEFT OUTER JOIN 
	     	QNA B
	    	ON (A.REF = B.QNANUM)
	    	LEFT OUTER JOIN 
	    	QNAFILE QF 
	    	ON (A.QNANUM=QF.QNANUM) 
	    WHERE A.QNANUM = #{num}
	</select>

 	<resultMap type="QnaDTO" id="getSelectResult">
 		<id column = "QNANUM" property="num"/>
 		<result column="NAME" property="name"/>
 		<result column="SUBJECT" property="subject"/>
 		<result column="CONTENTS" property="contents"/>
 		<result column="CREATEDATE" property="createDate"/>
 		<result column="SMS" property="sms"/>
 		<result column="REF" property="ref"/>
 		<result column="STEP" property="step"/>
 		<result column="DEPTH" property="depth"/>
 		
 		<association property="qnaDTO" javaType="QnaDTO" >
 			<result column="PNUM" property="num"/>
 			<result column="PNAME" property="name"/>
 			<result column="PCON" property="contents"/>
 			<result column="PSTEP" property="step"/>
 		</association>
 		<!-- fileDTOs -->
 		<collection property="fileDTOs" javaType="List" ofType="QnaFileDTO">
 			<id column="FILENUM" property="fileNum"/>
 			<result column="FILENAME" property="fileName"/>
 			<result column="ORIGINALNAME" property="originalName"/>
 		</collection>
 	</resultMap>
 	
 	
 	<insert id="setAdd" parameterType="QnaDTO">
 		<selectKey keyProperty="num" resultType="Long" order="BEFORE">
 			SELECT QNA_SEQ.NEXTVAL FROM DUAL
 		</selectKey>
 		INSERT INTO QNA (QNANUM, NAME, SUBJECT, CONTENTS, CREATEDATE, SMS, REF, STEP, DEPTH)
		VALUES (#{num}, #{name}, #{subject}, #{contents}, SYSDATE, #{sms}, #{num}, 0, 0)
 	</insert>
 	
 	
 	<update id="setUpdate" parameterType="QnaDTO">
		 UPDATE QNA
		 SET SUBJECT = #{subject}, CONTENTS = #{contents}
		 WHERE QNANUM = #{num} AND NAME = #{name}
 	</update>
 	
 	
 	<delete id="setDelete" parameterType="QnaDTO">
 		DELETE QNA WHERE QNANUM IN (
			SELECT QNANUM FROM QNA 
			WHERE REF = #{num} AND (STEP = 1 OR STEP = 0)
		)
 	</delete>
 	
 	
 	<!-- File -->
 	<!-- 1. insert 작성 중 file 올리기 (add, update) -->
 	<insert id="setFileAdd" parameterType="QnaFileDTO">
 		INSERT INTO QNAFILE (FILENUM, QNANUM, FILENAME, ORIGINALNAME)
 		VALUES (QNAFILE_SEQ.NEXTVAL, #{num}, #{fileName}, #{originalName})
 	</insert>
 	
 	<!-- << 수정 중 파일 삭제 >> -->
 	<!-- 2_1. 폴더 파일 삭제 (fileNum으로 fileName 조회) -->
 	<select id="getFileDetail" parameterType="QnaFileDTO" resultType="QnaFileDTO">
 		SELECT FILENUM, FILENAME, ORIGINALNAME FROM QNAFILE WHERE FILENUM = #{fileNum}
 	</select>
 	
 	<!-- 2_2. DB 삭제 (폴더 파일 삭제 완료 시 DB 삭제) -->
 	<delete id="setFileDelete" parameterType="QnaFileDTO">
 		DELETE QNAFILE WHERE FILENUM =  #{fileNum}
 	</delete>
 	
 	
 	<!-- Reply -->
 	<insert id="setReplyAdd" parameterType="com.alcohol.sul.board.qna.QnaDTO">
 		<selectKey keyProperty="num" resultType="Long" order="BEFORE">
 			SELECT QNA_SEQ.NEXTVAL FROM DUAL
 		</selectKey>
 		INSERT INTO QNA (QNANUM, NAME, SUBJECT, CONTENTS, CREATEDATE, SMS, REF, STEP, DEPTH)
		VALUES (#{num}, #{name}, #{subject}, #{contents}, SYSDATE, 0, #{ref}, #{step}, #{depth})
 	</insert>
 	
 	<update id="setStepUpdate" parameterType="com.alcohol.sul.board.qna.QnaDTO">
 		UPDATE QNA
 		SET STEP = STEP+1
 		WHERE REF = #{ref}
 		AND STEP > #{step}
 	</update>
 	
 	<!-- replu 부모글의 file 찾기 -->
 	<select id="getReplyDetailFiles" parameterType="QnaDTO" resultType="QnaFileDTO">
 		SELECT * FROM QNAFILE WHERE QNANUM = #{num}
 	</select>
 	
 	<!-- reply 부모글의 phone 번호 -->
 	<select id="getPhoneNumber" parameterType="MemberDTO" resultType="MemberDTO">
 		SELECT * FROM MEMBER WHERE ID = #{id}
 	</select>
 	
 	
 	
 	
 	<!-- 관리자 List -->
 	<sql id="ManagerSearchSql">
 		WHERE QNANUM>0
		<choose>
			<when test="kind == 'title'">
				AND SUBJECT LIKE '%'||#{search}||'%'
			</when>
			<otherwise>
				AND CONTENTS LIKE '%'||#{search}||'%'
			</otherwise>
		</choose>	
 	</sql>
 	
 	<select id="getManagerList" parameterType="Map" resultMap="getManagerResult">
 		SELECT * FROM
 			(SELECT ROWNUM R, B.* FROM
		  		(
			  		SELECT * FROM QNA 
					<include refid="ManagerSearchSql"></include>
			  		ORDER BY REF DESC, STEP ASC
		  		) B
	  		)
	  	WHERE R BETWEEN #{startRow} AND #{lastRow}
 	</select>
 	
 	<select id="getManagerTotal" parameterType="Pager" resultType="Long">
 		SELECT COUNT(QNANUM) FROM QNA
		<include refid="ManagerSearchSql"></include>
 	</select>
 	
 	<resultMap type="QnaDTO" id="getManagerResult">
		<id column = "QNANUM" property="num"/>
		<result column="NAME" property="name"/>
		<result column="SUBJECT" property="subject"/>
		<result column="CONTENTS" property="contents"/>
		<result column="CREATEDATE" property="createDate"/>
		<result column="SMS" property="sms"/>
		<result column="REF" property="ref"/>
		<result column="STEP" property="step"/>
		<result column="DEPTH" property="depth"/>
		<!-- fileDTO -->
		<collection property="fileDTOs" javaType="List" ofType="QnaFileDTO">
 			<id column="FILENUM" property="fileNum"/>
 			<result column="FILENAME" property="fileName"/>
 			<result column="ORIGINALNAME" property="originalName"/>
 		</collection>
 	</resultMap>
  </mapper>
  
  
  
  
  
  
  
  
  
  